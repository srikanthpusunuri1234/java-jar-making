name: Build & Deploy Java WAR

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build WAR file
      run: mvn clean package

    - name: Install AWS CLI and Upload WAR to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      run: |
        sudo apt-get update
        sudo apt-get install -y awscli
        aws s3 cp target/*.war s3://$S3_BUCKET/app.war --region $AWS_REGION

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/java-war-app .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/java-war-app

    - name: SSH into server and deploy container
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          if ! command -v docker &> /dev/null; then
            sudo yum update -y
            sudo amazon-linux-extras install docker -y
            sudo service docker start
            sudo usermod -aG docker $USER
          fi
          docker pull ${{ secrets.DOCKER_USERNAME }}/java-war-app
          docker stop java-app || true
          docker rm java-app || true
          docker run -d --name java-app -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/java-war-app
