name: Build and Deploy to All Servers

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build the JAR
        run: mvn clean package -DskipTests

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          for ip in ${{ secrets.SERVER_1_IP }} ${{ secrets.SERVER_2_IP }}; do
            ssh-keyscan -H $ip >> ~/.ssh/known_hosts
          done

      - name: Deploy to All Servers
        run: |
          for ip in ${{ secrets.SERVER_1_IP }} ${{ secrets.SERVER_2_IP }}; do
            echo "Deploying to $ip"

            # Create app directory
            ssh ${{ secrets.SERVER_USER }}@$ip "mkdir -p ~/app"

            # Copy JAR
            scp target/*.jar ${{ secrets.SERVER_USER }}@$ip:~/app/app.jar

            # Copy and install systemd service
            scp deploy/myapp.service ${{ secrets.SERVER_USER }}@$ip:~/myapp.service
            ssh ${{ secrets.SERVER_USER }}@$ip "sudo mv ~/myapp.service /etc/systemd/system/myapp.service && \
              sudo systemctl daemon-reload && \
              sudo systemctl enable myapp && \
              sudo systemctl restart myapp"

            # Install NGINX if not installed
            ssh ${{ secrets.SERVER_USER }}@$ip "which nginx || sudo apt update && sudo apt install -y nginx"

            # Upload and enable NGINX config
            scp deploy/nginx.conf ${{ secrets.SERVER_USER }}@$ip:~/nginx.conf
            ssh ${{ secrets.SERVER_USER }}@$ip "sudo mv ~/nginx.conf /etc/nginx/sites-available/myapp && \
              sudo ln -sf /etc/nginx/sites-available/myapp /etc/nginx/sites-enabled/myapp && \
              sudo nginx -t && sudo systemctl restart nginx"
          done
